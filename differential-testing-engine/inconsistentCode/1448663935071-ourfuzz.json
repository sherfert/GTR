{
  "fileName": "1448663935071-ourfuzz.js",
  "rawCode": "if (typeof a || kb.b('=')) {\n    function d(url) {\n        counter[r] = g;\n    }\n}\nfunction p(top) {\n    (opr || this.root()).h.h = opr = 'none' === 'Next';\n}",
  "userAgentToResults": {
    "Firefox 25.0 (Linux)": [
      {
        "key": "init",
        "value": "init"
      },
      {
        "key": "Error",
        "value": "ReferenceError: d is not defined"
      }
    ],
    "Chromium 50.0.2661.102 (Ubuntu)": [
      {
        "key": "init",
        "value": "init"
      },
      {
        "key": "Literal",
        "value": "undefined"
      },
      {
        "key": "Literal",
        "value": "function"
      },
      {
        "key": "Unary",
        "value": "typeof"
      },
      {
        "key": "Conditional",
        "value": "undefined"
      },
      {
        "key": "Conditional",
        "value": "undefined"
      }
    ]
  },
  "testCode": "__diffTestingEngineState__ = { state: [{key: \"init\", value: \"init\"}], result: \"noResultYet\", isCrashing: false };    var print = function (ip) {\n        return console.log(ip);    };    var alert = function(ip) {        return console.log(ip);    };    var uneval = function(code) {        return code;    };    try {        J$.iids = {\"nBranches\":4,\"originalCodeFileName\":\"evalIndirect\",\"instrumentedCodeFileName\":\"/tmp/116515-23983-1o8mi5k.u4lv01kyb9.js\"};\njalangiLabel68:\n    while (true) {\n        try {\n            J$.Se(65, '/tmp/116515-23983-1o8mi5k.u4lv01kyb9.js', 'evalIndirect');\n            d = J$.N(81, 'd', J$.T(73, d, 12, false, 33), 0);\n            if (J$.X1(105, J$.C(16, J$.C(8, J$.U(10, 'typeof', J$.I(typeof a === 'undefined' ? J$.R(9, 'a', undefined, 2) : J$.R(9, 'a', a, 2)))) ? J$._() : J$.M(25, J$.R(17, 'kb', kb, 2), 'undefined', 0)()))) {\n                function d() {\n                    jalangiLabel67:\n                        while (true) {\n                            try {\n                                J$.Fe(33, arguments.callee, this, arguments);\n                                arguments = J$.N(41, 'arguments', arguments, 4);\n                            } catch (J$e) {\n                                J$.Ex(89, J$e);\n                            } finally {\n                                if (J$.Fr(97))\n                                    continue jalangiLabel67;\n                                else\n                                    return J$.Ra();\n                            }\n                        }\n                }\n            }\n            J$.X1(57, J$.T(49, '__diffTestingEndOfCode__', 21, false));\n        } catch (J$e) {\n            J$.Ex(113, J$e);\n        } finally {\n            if (J$.Sr(121)) {\n                J$.L();\n                continue jalangiLabel68;\n            } else {\n                J$.L();\n                break jalangiLabel68;\n            }\n        }\n    }\n// JALANGI DO NOT INSTRUMENT\n    } catch (e) {        __diffTestingEngineState__.isCrashing=true;        if (e instanceof TypeError) {            __diffTestingEngineState__.state.push({key: \"Error\", value: \"TypeError: \" + e.message});        } else if (e instanceof RangeError) {            __diffTestingEngineState__.state.push({key: \"Error\", value: \"RangeError: \" + e.message});        } else if (e instanceof EvalError) {            __diffTestingEngineState__.state.push({key: \"Error\", value: \"EvalError: \" + e.message});        } else if (e instanceof ReferenceError) {            __diffTestingEngineState__.state.push({key: \"Error\", value: \"ReferenceError: \" + e.message});        }        else if (e instanceof URIError) {            __diffTestingEngineState__.state.push({key: \"Error\", value: \"URIError: \" + e.message});        }        else {            __diffTestingEngineState__.state.push({key: \"Error\", value: \"crash: \" + e.message});        }        __diffTestingEngineState__.result = __diffTestingEngineState__.state;    } __diffTestingEngineState__.result;",
  "minCode": "if (typeof a || kb.undefined()) {\n    function d() {\n    }\n}",
  "diff": {
    "Chromium 50.0.2661.102 (Ubuntu)": {},
    "Firefox 25.0 (Linux)": {
      "key": "Error",
      "value": "ReferenceError: d is not defined"
    }
  },
  "isCrashing": "true",
  "lastTested": "6/15/2016, 3:38:41 PM"
}