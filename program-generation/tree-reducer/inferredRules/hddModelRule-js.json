{
  "parents": {
    "IfStatement": {
      "Program": [
        "body"
      ],
      "BlockStatement": [
        "body"
      ],
      "IfStatement": [
        "alternate",
        "consequent"
      ],
      "SwitchCase": [
        "consequent"
      ],
      "ForStatement": [
        "body"
      ],
      "ForInStatement": [
        "body"
      ],
      "WhileStatement": [
        "body"
      ],
      "LabeledStatement": [
        "body"
      ],
      "DoWhileStatement": [
        "body"
      ]
    },
    "BinaryExpression": {
      "IfStatement": [
        "test"
      ],
      "CallExpression": [
        "arguments",
        "callee"
      ],
      "ForStatement": [
        "test"
      ],
      "BinaryExpression": [
        "left",
        "right"
      ],
      "VariableDeclarator": [
        "init"
      ],
      "MemberExpression": [
        "property",
        "object"
      ],
      "AssignmentExpression": [
        "right"
      ],
      "Property": [
        "value"
      ],
      "LogicalExpression": [
        "right",
        "left"
      ],
      "ReturnStatement": [
        "argument"
      ],
      "NewExpression": [
        "arguments"
      ],
      "UnaryExpression": [
        "argument"
      ],
      "ConditionalExpression": [
        "test",
        "alternate",
        "consequent"
      ],
      "ArrayExpression": [
        "elements"
      ],
      "WhileStatement": [
        "test"
      ],
      "ThrowStatement": [
        "argument"
      ],
      "DoWhileStatement": [
        "test"
      ],
      "ArrowFunctionExpression": [
        "body"
      ],
      "ExpressionStatement": [
        "expression"
      ],
      "SwitchCase": [
        "test"
      ],
      "SequenceExpression": [
        "expressions"
      ],
      "SwitchStatement": [
        "discriminant"
      ]
    },
    "UnaryExpression": {
      "BinaryExpression": [
        "left",
        "right"
      ],
      "CallExpression": [
        "arguments"
      ],
      "IfStatement": [
        "test"
      ],
      "AssignmentExpression": [
        "right"
      ],
      "LogicalExpression": [
        "left",
        "right"
      ],
      "Property": [
        "value"
      ],
      "UnaryExpression": [
        "argument"
      ],
      "ExpressionStatement": [
        "expression"
      ],
      "ConditionalExpression": [
        "test",
        "alternate",
        "consequent"
      ],
      "ReturnStatement": [
        "argument"
      ],
      "SwitchStatement": [
        "discriminant"
      ],
      "VariableDeclarator": [
        "init"
      ],
      "ForStatement": [
        "test"
      ],
      "ArrayExpression": [
        "elements"
      ],
      "WhileStatement": [
        "test"
      ],
      "NewExpression": [
        "arguments"
      ],
      "MemberExpression": [
        "object",
        "property"
      ],
      "SequenceExpression": [
        "expressions"
      ],
      "DoWhileStatement": [
        "test"
      ],
      "SwitchCase": [
        "test"
      ],
      "ArrowFunctionExpression": [
        "body"
      ]
    },
    "Identifier": {
      "UnaryExpression": [
        "argument"
      ],
      "AssignmentExpression": [
        "left",
        "right"
      ],
      "MemberExpression": [
        "object",
        "property"
      ],
      "CallExpression": [
        "callee",
        "arguments"
      ],
      "BinaryExpression": [
        "left",
        "right"
      ],
      "VariableDeclarator": [
        "id",
        "init"
      ],
      "Property": [
        "key",
        "value"
      ],
      "NewExpression": [
        "callee",
        "arguments"
      ],
      "FunctionExpression": [
        "params",
        "id"
      ],
      "UpdateExpression": [
        "argument"
      ],
      "ReturnStatement": [
        "argument"
      ],
      "ForInStatement": [
        "right",
        "left"
      ],
      "IfStatement": [
        "test"
      ],
      "ExpressionStatement": [
        "expression"
      ],
      "ArrayExpression": [
        "elements"
      ],
      "CatchClause": [
        "param"
      ],
      "FunctionDeclaration": [
        "id",
        "params"
      ],
      "ConditionalExpression": [
        "test",
        "consequent",
        "alternate"
      ],
      "LogicalExpression": [
        "left",
        "right"
      ],
      "ThrowStatement": [
        "argument"
      ],
      "WhileStatement": [
        "test"
      ],
      "SwitchStatement": [
        "discriminant"
      ],
      "ArrowFunctionExpression": [
        "params"
      ],
      "ForStatement": [
        "test",
        "init",
        "update"
      ],
      "SwitchCase": [
        "test"
      ],
      "DoWhileStatement": [
        "test"
      ],
      "LabeledStatement": [
        "label"
      ],
      "ContinueStatement": [
        "label"
      ],
      "SequenceExpression": [
        "expressions"
      ],
      "BreakStatement": [
        "label"
      ],
      "ClassDeclaration": [
        "id",
        "superClass"
      ],
      "MethodDefinition": [
        "key"
      ],
      "ForOfStatement": [
        "right"
      ]
    },
    "Literal": {
      "BinaryExpression": [
        "right",
        "left"
      ],
      "AssignmentExpression": [
        "right"
      ],
      "CallExpression": [
        "arguments"
      ],
      "Property": [
        "value",
        "key"
      ],
      "VariableDeclarator": [
        "init"
      ],
      "ReturnStatement": [
        "argument"
      ],
      "ArrayExpression": [
        "elements"
      ],
      "MemberExpression": [
        "property",
        "object"
      ],
      "SequenceExpression": [
        "expressions"
      ],
      "UnaryExpression": [
        "argument"
      ],
      "NewExpression": [
        "arguments"
      ],
      "ExpressionStatement": [
        "expression"
      ],
      "ConditionalExpression": [
        "alternate",
        "consequent",
        "test"
      ],
      "LogicalExpression": [
        "right",
        "left"
      ],
      "SwitchCase": [
        "test"
      ],
      "IfStatement": [
        "test"
      ],
      "ThrowStatement": [
        "argument"
      ],
      "WhileStatement": [
        "test"
      ],
      "DoWhileStatement": [
        "test"
      ],
      "ForStatement": [
        "test"
      ],
      "SwitchStatement": [
        "discriminant"
      ]
    },
    "BlockStatement": {
      "IfStatement": [
        "consequent",
        "alternate"
      ],
      "FunctionExpression": [
        "body"
      ],
      "ForStatement": [
        "body"
      ],
      "ForInStatement": [
        "body"
      ],
      "TryStatement": [
        "block",
        "finalizer"
      ],
      "CatchClause": [
        "body"
      ],
      "FunctionDeclaration": [
        "body"
      ],
      "WhileStatement": [
        "body"
      ],
      "ArrowFunctionExpression": [
        "body"
      ],
      "BlockStatement": [
        "body"
      ],
      "DoWhileStatement": [
        "body"
      ],
      "SwitchCase": [
        "consequent"
      ],
      "ForOfStatement": [
        "body"
      ],
      "LabeledStatement": [
        "body"
      ],
      "Program": [
        "body"
      ]
    },
    "ExpressionStatement": {
      "BlockStatement": [
        "body"
      ],
      "Program": [
        "body"
      ],
      "IfStatement": [
        "consequent",
        "alternate"
      ],
      "ForStatement": [
        "body"
      ],
      "ForInStatement": [
        "body"
      ],
      "WhileStatement": [
        "body"
      ],
      "SwitchCase": [
        "consequent"
      ],
      "LabeledStatement": [
        "body"
      ],
      "DoWhileStatement": [
        "body"
      ]
    },
    "AssignmentExpression": {
      "ExpressionStatement": [
        "expression"
      ],
      "VariableDeclarator": [
        "init"
      ],
      "SequenceExpression": [
        "expressions"
      ],
      "AssignmentExpression": [
        "right"
      ],
      "ForStatement": [
        "init",
        "update",
        "test"
      ],
      "LogicalExpression": [
        "right",
        "left"
      ],
      "IfStatement": [
        "test"
      ],
      "UnaryExpression": [
        "argument"
      ],
      "ReturnStatement": [
        "argument"
      ],
      "WhileStatement": [
        "test"
      ],
      "BinaryExpression": [
        "left",
        "right"
      ],
      "ThrowStatement": [
        "argument"
      ],
      "ArrowFunctionExpression": [
        "body"
      ],
      "MemberExpression": [
        "object",
        "property"
      ],
      "ConditionalExpression": [
        "consequent",
        "alternate",
        "test"
      ],
      "CallExpression": [
        "arguments",
        "callee"
      ],
      "DoWhileStatement": [
        "test"
      ],
      "ArrayExpression": [
        "elements"
      ],
      "Property": [
        "value"
      ],
      "NewExpression": [
        "arguments"
      ],
      "SwitchStatement": [
        "discriminant"
      ]
    },
    "MemberExpression": {
      "AssignmentExpression": [
        "left",
        "right"
      ],
      "ExpressionStatement": [
        "expression"
      ],
      "MemberExpression": [
        "object",
        "property"
      ],
      "CallExpression": [
        "callee",
        "arguments"
      ],
      "VariableDeclarator": [
        "init"
      ],
      "NewExpression": [
        "callee",
        "arguments"
      ],
      "UnaryExpression": [
        "argument"
      ],
      "IfStatement": [
        "test"
      ],
      "BinaryExpression": [
        "right",
        "left"
      ],
      "LogicalExpression": [
        "left",
        "right"
      ],
      "ArrayExpression": [
        "elements"
      ],
      "Property": [
        "value"
      ],
      "ReturnStatement": [
        "argument"
      ],
      "ForInStatement": [
        "right"
      ],
      "ConditionalExpression": [
        "alternate",
        "consequent",
        "test"
      ],
      "UpdateExpression": [
        "argument"
      ],
      "SwitchStatement": [
        "discriminant"
      ],
      "WhileStatement": [
        "test"
      ],
      "ThrowStatement": [
        "argument"
      ],
      "SpreadElement": [
        "argument"
      ],
      "SwitchCase": [
        "test"
      ],
      "ForOfStatement": [
        "right"
      ],
      "ForStatement": [
        "test"
      ],
      "SequenceExpression": [
        "expressions"
      ],
      "DoWhileStatement": [
        "test"
      ],
      "ArrowFunctionExpression": [
        "body"
      ]
    },
    "CallExpression": {
      "AssignmentExpression": [
        "right"
      ],
      "ExpressionStatement": [
        "expression"
      ],
      "MemberExpression": [
        "object",
        "property"
      ],
      "VariableDeclarator": [
        "init"
      ],
      "BinaryExpression": [
        "right",
        "left"
      ],
      "CallExpression": [
        "arguments",
        "callee"
      ],
      "Property": [
        "value"
      ],
      "ReturnStatement": [
        "argument"
      ],
      "IfStatement": [
        "test"
      ],
      "WhileStatement": [
        "test"
      ],
      "LogicalExpression": [
        "right",
        "left"
      ],
      "NewExpression": [
        "arguments",
        "callee"
      ],
      "ArrayExpression": [
        "elements"
      ],
      "UnaryExpression": [
        "argument"
      ],
      "ConditionalExpression": [
        "consequent",
        "test",
        "alternate"
      ],
      "SequenceExpression": [
        "expressions"
      ],
      "ThrowStatement": [
        "argument"
      ],
      "SwitchStatement": [
        "discriminant"
      ],
      "ArrowFunctionExpression": [
        "body"
      ],
      "ForStatement": [
        "test",
        "init",
        "update"
      ],
      "DoWhileStatement": [
        "test"
      ],
      "ForOfStatement": [
        "right"
      ],
      "ForInStatement": [
        "right"
      ]
    },
    "FunctionExpression": {
      "CallExpression": [
        "arguments",
        "callee"
      ],
      "VariableDeclarator": [
        "init"
      ],
      "AssignmentExpression": [
        "right"
      ],
      "Property": [
        "value"
      ],
      "SequenceExpression": [
        "expressions"
      ],
      "ReturnStatement": [
        "argument"
      ],
      "ArrayExpression": [
        "elements"
      ],
      "LogicalExpression": [
        "right"
      ],
      "MemberExpression": [
        "object"
      ],
      "ConditionalExpression": [
        "alternate",
        "consequent"
      ],
      "NewExpression": [
        "callee",
        "arguments"
      ],
      "MethodDefinition": [
        "value"
      ],
      "ExpressionStatement": [
        "expression"
      ]
    },
    "VariableDeclaration": {
      "Program": [
        "body"
      ],
      "BlockStatement": [
        "body"
      ],
      "ForStatement": [
        "init"
      ],
      "ForInStatement": [
        "left"
      ],
      "SwitchCase": [
        "consequent"
      ],
      "IfStatement": [
        "consequent",
        "alternate"
      ],
      "ForOfStatement": [
        "left"
      ],
      "DoWhileStatement": [
        "body"
      ]
    },
    "VariableDeclarator": {
      "VariableDeclaration": [
        "declarations"
      ]
    },
    "ObjectExpression": {
      "VariableDeclarator": [
        "init"
      ],
      "NewExpression": [
        "arguments"
      ],
      "CallExpression": [
        "arguments"
      ],
      "ArrayExpression": [
        "elements"
      ],
      "Property": [
        "value"
      ],
      "ReturnStatement": [
        "argument"
      ],
      "AssignmentExpression": [
        "right"
      ],
      "ConditionalExpression": [
        "consequent",
        "alternate"
      ],
      "LogicalExpression": [
        "right"
      ],
      "MemberExpression": [
        "object"
      ],
      "ExpressionStatement": [
        "expression"
      ],
      "ForInStatement": [
        "right"
      ],
      "ThrowStatement": [
        "argument"
      ],
      "BinaryExpression": [
        "right"
      ]
    },
    "Property": {
      "ObjectExpression": [
        "properties"
      ],
      "ObjectPattern": [
        "properties"
      ]
    },
    "NewExpression": {
      "VariableDeclarator": [
        "init"
      ],
      "ArrayExpression": [
        "elements"
      ],
      "MemberExpression": [
        "object"
      ],
      "ThrowStatement": [
        "argument"
      ],
      "AssignmentExpression": [
        "right"
      ],
      "CallExpression": [
        "arguments",
        "callee"
      ],
      "ReturnStatement": [
        "argument"
      ],
      "LogicalExpression": [
        "right"
      ],
      "Property": [
        "value"
      ],
      "NewExpression": [
        "arguments"
      ],
      "ConditionalExpression": [
        "consequent",
        "alternate"
      ],
      "ExpressionStatement": [
        "expression"
      ],
      "IfStatement": [
        "test"
      ],
      "BinaryExpression": [
        "right",
        "left"
      ],
      "UnaryExpression": [
        "argument"
      ],
      "SequenceExpression": [
        "expressions"
      ],
      "ForInStatement": [
        "right"
      ]
    },
    "ArrayExpression": {
      "Property": [
        "value"
      ],
      "VariableDeclarator": [
        "init"
      ],
      "CallExpression": [
        "arguments"
      ],
      "AssignmentExpression": [
        "right"
      ],
      "ArrayExpression": [
        "elements"
      ],
      "NewExpression": [
        "arguments"
      ],
      "MemberExpression": [
        "object",
        "property"
      ],
      "ReturnStatement": [
        "argument"
      ],
      "ConditionalExpression": [
        "alternate",
        "consequent"
      ],
      "LogicalExpression": [
        "right"
      ],
      "SequenceExpression": [
        "expressions"
      ],
      "ThrowStatement": [
        "argument"
      ]
    },
    "ForStatement": {
      "BlockStatement": [
        "body"
      ],
      "SwitchCase": [
        "consequent"
      ],
      "LabeledStatement": [
        "body"
      ],
      "IfStatement": [
        "consequent",
        "alternate"
      ],
      "Program": [
        "body"
      ],
      "ForStatement": [
        "body"
      ],
      "ForInStatement": [
        "body"
      ]
    },
    "UpdateExpression": {
      "ForStatement": [
        "update",
        "test",
        "init"
      ],
      "BinaryExpression": [
        "left",
        "right"
      ],
      "ExpressionStatement": [
        "expression"
      ],
      "WhileStatement": [
        "test"
      ],
      "CallExpression": [
        "arguments"
      ],
      "Property": [
        "value"
      ],
      "MemberExpression": [
        "object",
        "property"
      ],
      "AssignmentExpression": [
        "right"
      ],
      "ReturnStatement": [
        "argument"
      ],
      "VariableDeclarator": [
        "init"
      ],
      "ConditionalExpression": [
        "consequent",
        "alternate"
      ],
      "NewExpression": [
        "arguments"
      ],
      "SequenceExpression": [
        "expressions"
      ],
      "UnaryExpression": [
        "argument"
      ],
      "LogicalExpression": [
        "right",
        "left"
      ],
      "ArrayExpression": [
        "elements"
      ],
      "SwitchStatement": [
        "discriminant"
      ],
      "IfStatement": [
        "test"
      ],
      "DoWhileStatement": [
        "test"
      ]
    },
    "ReturnStatement": {
      "BlockStatement": [
        "body"
      ],
      "IfStatement": [
        "consequent",
        "alternate"
      ],
      "SwitchCase": [
        "consequent"
      ],
      "ForInStatement": [
        "body"
      ]
    },
    "ForInStatement": {
      "BlockStatement": [
        "body"
      ],
      "IfStatement": [
        "consequent",
        "alternate"
      ],
      "SwitchCase": [
        "consequent"
      ],
      "Program": [
        "body"
      ],
      "ForStatement": [
        "body"
      ],
      "LabeledStatement": [
        "body"
      ],
      "ForInStatement": [
        "body"
      ]
    },
    "SequenceExpression": {
      "ExpressionStatement": [
        "expression"
      ],
      "SequenceExpression": [
        "expressions"
      ],
      "ForStatement": [
        "init",
        "update",
        "test"
      ],
      "AssignmentExpression": [
        "right"
      ],
      "ReturnStatement": [
        "argument"
      ],
      "LogicalExpression": [
        "right",
        "left"
      ],
      "ThrowStatement": [
        "argument"
      ],
      "ConditionalExpression": [
        "alternate",
        "consequent",
        "test"
      ],
      "IfStatement": [
        "test"
      ],
      "VariableDeclarator": [
        "init"
      ],
      "CallExpression": [
        "arguments",
        "callee"
      ],
      "WhileStatement": [
        "test"
      ],
      "NewExpression": [
        "arguments"
      ],
      "BinaryExpression": [
        "left"
      ],
      "SwitchCase": [
        "test"
      ],
      "SwitchStatement": [
        "discriminant"
      ],
      "Property": [
        "value"
      ]
    },
    "ThrowStatement": {
      "BlockStatement": [
        "body"
      ],
      "IfStatement": [
        "consequent",
        "alternate"
      ],
      "SwitchCase": [
        "consequent"
      ],
      "Program": [
        "body"
      ]
    },
    "LogicalExpression": {
      "AssignmentExpression": [
        "right"
      ],
      "IfStatement": [
        "test"
      ],
      "LogicalExpression": [
        "left",
        "right"
      ],
      "MemberExpression": [
        "property",
        "object"
      ],
      "VariableDeclarator": [
        "init"
      ],
      "CallExpression": [
        "arguments",
        "callee"
      ],
      "ExpressionStatement": [
        "expression"
      ],
      "ReturnStatement": [
        "argument"
      ],
      "UnaryExpression": [
        "argument"
      ],
      "ConditionalExpression": [
        "test",
        "alternate",
        "consequent"
      ],
      "Property": [
        "value"
      ],
      "BinaryExpression": [
        "right",
        "left"
      ],
      "WhileStatement": [
        "test"
      ],
      "ForStatement": [
        "test",
        "update",
        "init"
      ],
      "DoWhileStatement": [
        "test"
      ],
      "NewExpression": [
        "arguments",
        "callee"
      ],
      "ArrayExpression": [
        "elements"
      ],
      "SwitchStatement": [
        "discriminant"
      ],
      "SequenceExpression": [
        "expressions"
      ],
      "ForInStatement": [
        "right"
      ],
      "SwitchCase": [
        "test"
      ],
      "ArrowFunctionExpression": [
        "body"
      ]
    },
    "TryStatement": {
      "BlockStatement": [
        "body"
      ],
      "Program": [
        "body"
      ],
      "IfStatement": [
        "alternate",
        "consequent"
      ],
      "SwitchCase": [
        "consequent"
      ],
      "ForStatement": [
        "body"
      ],
      "WhileStatement": [
        "body"
      ],
      "ForInStatement": [
        "body"
      ]
    },
    "CatchClause": {
      "TryStatement": [
        "handlers",
        "handler"
      ]
    },
    "FunctionDeclaration": {
      "BlockStatement": [
        "body"
      ],
      "Program": [
        "body"
      ],
      "LabeledStatement": [
        "body"
      ]
    },
    "ConditionalExpression": {
      "CallExpression": [
        "arguments",
        "callee"
      ],
      "AssignmentExpression": [
        "right"
      ],
      "VariableDeclarator": [
        "init"
      ],
      "BinaryExpression": [
        "right",
        "left"
      ],
      "MemberExpression": [
        "property",
        "object"
      ],
      "ConditionalExpression": [
        "alternate",
        "consequent",
        "test"
      ],
      "ReturnStatement": [
        "argument"
      ],
      "Property": [
        "value"
      ],
      "NewExpression": [
        "arguments",
        "callee"
      ],
      "UnaryExpression": [
        "argument"
      ],
      "LogicalExpression": [
        "right",
        "left"
      ],
      "ArrayExpression": [
        "elements"
      ],
      "ExpressionStatement": [
        "expression"
      ],
      "ForStatement": [
        "update",
        "test"
      ],
      "SequenceExpression": [
        "expressions"
      ],
      "IfStatement": [
        "test"
      ],
      "SwitchStatement": [
        "discriminant"
      ],
      "WhileStatement": [
        "test"
      ],
      "ArrowFunctionExpression": [
        "body"
      ]
    },
    "WhileStatement": {
      "BlockStatement": [
        "body"
      ],
      "SwitchCase": [
        "consequent"
      ],
      "IfStatement": [
        "consequent",
        "alternate"
      ],
      "LabeledStatement": [
        "body"
      ],
      "Program": [
        "body"
      ]
    },
    "BreakStatement": {
      "BlockStatement": [
        "body"
      ],
      "SwitchCase": [
        "consequent"
      ],
      "IfStatement": [
        "consequent",
        "alternate"
      ]
    },
    "ContinueStatement": {
      "BlockStatement": [
        "body"
      ],
      "IfStatement": [
        "consequent",
        "alternate"
      ],
      "SwitchCase": [
        "consequent"
      ]
    },
    "SwitchStatement": {
      "BlockStatement": [
        "body"
      ],
      "SwitchCase": [
        "consequent"
      ],
      "IfStatement": [
        "consequent",
        "alternate"
      ],
      "WhileStatement": [
        "body"
      ]
    },
    "SwitchCase": {
      "SwitchStatement": [
        "cases"
      ]
    },
    "ObjectPattern": {
      "VariableDeclarator": [
        "id"
      ]
    },
    "ArrowFunctionExpression": {
      "CallExpression": [
        "arguments"
      ],
      "VariableDeclarator": [
        "init"
      ],
      "Property": [
        "value"
      ]
    },
    "SpreadElement": {
      "CallExpression": [
        "arguments"
      ]
    },
    "DoWhileStatement": {
      "SwitchCase": [
        "consequent"
      ],
      "BlockStatement": [
        "body"
      ],
      "LabeledStatement": [
        "body"
      ],
      "IfStatement": [
        "consequent",
        "alternate"
      ],
      "Program": [
        "body"
      ]
    },
    "LabeledStatement": {
      "BlockStatement": [
        "body"
      ],
      "Program": [
        "body"
      ],
      "IfStatement": [
        "consequent"
      ],
      "SwitchCase": [
        "consequent"
      ]
    },
    "ForOfStatement": {
      "BlockStatement": [
        "body"
      ],
      "LabeledStatement": [
        "body"
      ]
    },
    "ClassDeclaration": {
      "BlockStatement": [
        "body"
      ]
    },
    "ClassBody": {
      "ClassDeclaration": [
        "body"
      ]
    },
    "MethodDefinition": {
      "ClassBody": [
        "body"
      ]
    }
  },
  "numTransformations": 5581
}
